% Gesamtsystem Pflicht
Dezentrale Erfassung von Metadaten: Anzahl Publisher und Subscriber, Bandbreite, Frequenz, Latenz, Jitter
Modulare Definition der Metadaten anhand von Metadaten und dem ROS-Graph
Knoten zum zentralen Abgleich des Soll- und Ist-Zustandes
 Warnungen und Fehlernachrichten bei maßgeblichen Abweichungen
Definition eines ROS Message Types für Metadaten
Eigenständiger Knoten zur Überwachung der Hardware des Host-Systems (CPU Auslastung, CPU Temperatur, RAM, Festplatten-Speicher)

% Gesamtsystem Optional
Überwachung der einzelnen Prozesse die Knoten angehören (CPU Auslastung, RAM Nutzung, Threads)
Überwachung weiterer ROS Komponenten wie Services und Parameters
Definition und Überwachung des Empfangs- und Sendeverhaltens eines Knotens
Festlegen des Ist-Zustandes als Soll-Definition
Anpassung des Systems ans Netzwerkgegebenheiten
Integration mit roswtf

% Soll Spezifikation Optional
Spezifikationen in yaml speichern
Parametriesierung für Topics, Hosts und Knoten getrennt
 Bereichangabe als Soll Spezifikation
Defaultwerte für Spezifikationsparameter
Übergabe der Spezifikation bei Start des Überwachungsknotens
 Weitergabe der Soll Spezifikation an den ROS Parameter Server bei Knotenstart
Bestimmte Teilsysteme überwachen
 Teilsysteme können sich überlappen
Ein Überwachungsknoten für alle Teilsysteme

% API Pflicht
Die Metadaten werden durch Hinzufügen eines Funktionsaufrufes zu bestehenden Callbacks erfasst
Die Metadaten werden auf einem Topic mit definierter Frequenz publiziert
Die Metadatenerfassung lässt sich über Parameter deaktivieren

% API Optional
Knoten sind in der Lage, sich anhand ihrer Soll-Metadaten selber zu überwachen
Das System wird auch C++-seitig implementiert

% GUI Pflicht
Die grafische Benutzeroberfläche bietet eine Visualisierung des Soll-Ist-Vergleichs von sowohl Knoten als auch Hostsystemen

% GUI Optional
Der Soll-Ist-Vergleich wird in einer Visualisierung des ROS Graphen dargestellt
Es wird ein zeitlicher Verlauf der Metadaten aufgezeichnet und grafisch dargestellt
Knoten werden im Graphen nach ihrem Host gruppiert angezeigt
Unsere Plugins sind in der Lage untereinander zu kommunizieren
